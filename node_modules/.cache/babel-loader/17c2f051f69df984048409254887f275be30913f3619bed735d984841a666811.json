{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Nikita\\\\film-list\\\\src\\\\components\\\\tableBody.jsx\";\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport _ from \"lodash\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TableBody = _ref => {\n  let {\n    data,\n    columns\n  } = _ref;\n  const renderContent = params => {\n    {\n      columns[column].component || _.get(item, columns[column].path);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"tbody\", {\n    children: data.map(item => /*#__PURE__*/_jsxDEV(\"tr\", {\n      children: Object.keys(columns).map(column => /*#__PURE__*/_jsxDEV(\"td\", {}, column, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 25\n      }, this))\n    }, item._id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 17\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 9\n  }, this);\n};\n_c = TableBody;\nTableBody.propTypes = {\n  data: PropTypes.array.isRequired,\n  columns: PropTypes.object.isRequired\n};\nexport default TableBody;\nvar _c;\n$RefreshReg$(_c, \"TableBody\");","map":{"version":3,"names":["React","PropTypes","_","jsxDEV","_jsxDEV","TableBody","_ref","data","columns","renderContent","params","column","component","get","item","path","children","map","Object","keys","fileName","_jsxFileName","lineNumber","columnNumber","_id","_c","propTypes","array","isRequired","object","$RefreshReg$"],"sources":["C:/Users/Nikita/film-list/src/components/tableBody.jsx"],"sourcesContent":["import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport _ from \"lodash\";\r\n\r\nconst TableBody = ({ data, columns }) => {\r\n    const renderContent = (params) => {\r\n        {\r\n            columns[column].component || _.get(item, columns[column].path);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <tbody>\r\n            {data.map((item) => (\r\n                <tr key={item._id}>\r\n                    {Object.keys(columns).map((column) => (\r\n                        <td key={column}></td>\r\n                    ))}\r\n                </tr>\r\n            ))}\r\n        </tbody>\r\n    );\r\n};\r\n\r\nTableBody.propTypes = {\r\n    data: PropTypes.array.isRequired,\r\n    columns: PropTypes.object.isRequired\r\n};\r\n\r\nexport default TableBody;\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,SAAS,MAAM,YAAY;AAClC,OAAOC,CAAC,MAAM,QAAQ;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvB,MAAMC,SAAS,GAAGC,IAAA,IAAuB;EAAA,IAAtB;IAAEC,IAAI;IAAEC;EAAQ,CAAC,GAAAF,IAAA;EAChC,MAAMG,aAAa,GAAIC,MAAM,IAAK;IAC9B;MACIF,OAAO,CAACG,MAAM,CAAC,CAACC,SAAS,IAAIV,CAAC,CAACW,GAAG,CAACC,IAAI,EAAEN,OAAO,CAACG,MAAM,CAAC,CAACI,IAAI,CAAC;IAClE;EACJ,CAAC;EAED,oBACIX,OAAA;IAAAY,QAAA,EACKT,IAAI,CAACU,GAAG,CAAEH,IAAI,iBACXV,OAAA;MAAAY,QAAA,EACKE,MAAM,CAACC,IAAI,CAACX,OAAO,CAAC,CAACS,GAAG,CAAEN,MAAM,iBAC7BP,OAAA,WAASO,MAAM;QAAAS,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAClB;IAAC,GAHGT,IAAI,CAACU,GAAG;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAKpB;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACE;AAEhB,CAAC;AAACE,EAAA,GAlBIpB,SAAS;AAoBfA,SAAS,CAACqB,SAAS,GAAG;EAClBnB,IAAI,EAAEN,SAAS,CAAC0B,KAAK,CAACC,UAAU;EAChCpB,OAAO,EAAEP,SAAS,CAAC4B,MAAM,CAACD;AAC9B,CAAC;AAED,eAAevB,SAAS;AAAC,IAAAoB,EAAA;AAAAK,YAAA,CAAAL,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}