{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Nikita\\\\film-list\\\\src\\\\components\\\\groupList.jsx\";\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GroupList = _ref => {\n  let {\n    items,\n    valueProperty,\n    contentProperty,\n    onItemSelect,\n    selectedItem\n  } = _ref;\n  // items.map((item) => console.log(item.genereOfFilm));\n  // Object.keys(items).map((item) => console.log(item));\n\n  if (!Array.isArray(items)) {\n    return /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"list-group\",\n      children: [\"//\", Object.keys(items).map(item => /*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"list-group-item\" + (items[item] === selectedItem ? \" active\" : \"\"),\n        onClick: () => onItemSelect(items[item]),\n        role: \"button\",\n        children: items[item][contentProperty]\n      }, items[item][valueProperty], false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 21\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 13\n    }, this);\n  }\n\n  // return (\n  //     <ul className=\"list-group\">\n  //         {Array.isArray(items) === false\n  //             ? Object.keys(items).map((item) => (\n  //                   <li\n  //                       key={items[item][valueProperty]}\n  //                       className={\n  //                           \"list-group-item\" +\n  //                           (items[item] === selectedItem ? \" active\" : \"\")\n  //                       }\n  //                       onClick={() => onItemSelect(items[item])}\n  //                       role=\"button\"\n  //                   >\n  //                       {items[item][contentProperty]}\n  //                   </li>\n  //               ))\n  //             : items.map((item) => (\n  //                   <li\n  //                       key={item[valueProperty]}\n  //                       className={\n  //                           \"list-group-item\" +\n  //                           (item === selectedItem ? \" active\" : \"\")\n  //                       }\n  //                       onClick={() => onItemSelect(item)}\n  //                       role=\"button\"\n  //                   >\n  //                       {item[contentProperty]}\n  //                   </li>\n  //               ))}\n  //     </ul>\n  // );\n};\n_c = GroupList;\nGroupList.defaultProps = {\n  valueProperty: \"_id\",\n  contentProperty: \"name\"\n};\nGroupList.propTypes = {\n  items: PropTypes.oneOfType([PropTypes.object, PropTypes.array]),\n  valueProperty: PropTypes.string.isRequired,\n  contentProperty: PropTypes.string.isRequired,\n  onItemSelect: PropTypes.func,\n  selectedItem: PropTypes.object\n};\nexport default GroupList;\nvar _c;\n$RefreshReg$(_c, \"GroupList\");","map":{"version":3,"names":["React","PropTypes","jsxDEV","_jsxDEV","GroupList","_ref","items","valueProperty","contentProperty","onItemSelect","selectedItem","Array","isArray","className","children","Object","keys","map","item","onClick","role","fileName","_jsxFileName","lineNumber","columnNumber","_c","defaultProps","propTypes","oneOfType","object","array","string","isRequired","func","$RefreshReg$"],"sources":["C:/Users/Nikita/film-list/src/components/groupList.jsx"],"sourcesContent":["import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst GroupList = ({\r\n    items,\r\n    valueProperty,\r\n    contentProperty,\r\n    onItemSelect,\r\n    selectedItem\r\n}) => {\r\n    // items.map((item) => console.log(item.genereOfFilm));\r\n    // Object.keys(items).map((item) => console.log(item));\r\n\r\n    if (!Array.isArray(items)) {\r\n        return (\r\n            <ul className=\"list-group\">\r\n                //\r\n                {Object.keys(items).map((item) => (\r\n                    <li\r\n                        key={items[item][valueProperty]}\r\n                        className={\r\n                            \"list-group-item\" +\r\n                            (items[item] === selectedItem ? \" active\" : \"\")\r\n                        }\r\n                        onClick={() => onItemSelect(items[item])}\r\n                        role=\"button\"\r\n                    >\r\n                        {items[item][contentProperty]}\r\n                    </li>\r\n                ))}\r\n            </ul>\r\n        );\r\n    }\r\n\r\n    // return (\r\n    //     <ul className=\"list-group\">\r\n    //         {Array.isArray(items) === false\r\n    //             ? Object.keys(items).map((item) => (\r\n    //                   <li\r\n    //                       key={items[item][valueProperty]}\r\n    //                       className={\r\n    //                           \"list-group-item\" +\r\n    //                           (items[item] === selectedItem ? \" active\" : \"\")\r\n    //                       }\r\n    //                       onClick={() => onItemSelect(items[item])}\r\n    //                       role=\"button\"\r\n    //                   >\r\n    //                       {items[item][contentProperty]}\r\n    //                   </li>\r\n    //               ))\r\n    //             : items.map((item) => (\r\n    //                   <li\r\n    //                       key={item[valueProperty]}\r\n    //                       className={\r\n    //                           \"list-group-item\" +\r\n    //                           (item === selectedItem ? \" active\" : \"\")\r\n    //                       }\r\n    //                       onClick={() => onItemSelect(item)}\r\n    //                       role=\"button\"\r\n    //                   >\r\n    //                       {item[contentProperty]}\r\n    //                   </li>\r\n    //               ))}\r\n    //     </ul>\r\n    // );\r\n};\r\n\r\nGroupList.defaultProps = {\r\n    valueProperty: \"_id\",\r\n    contentProperty: \"name\"\r\n};\r\n\r\nGroupList.propTypes = {\r\n    items: PropTypes.oneOfType([PropTypes.object, PropTypes.array]),\r\n    valueProperty: PropTypes.string.isRequired,\r\n    contentProperty: PropTypes.string.isRequired,\r\n    onItemSelect: PropTypes.func,\r\n    selectedItem: PropTypes.object\r\n};\r\n\r\nexport default GroupList;\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,SAAS,MAAM,YAAY;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnC,MAAMC,SAAS,GAAGC,IAAA,IAMZ;EAAA,IANa;IACfC,KAAK;IACLC,aAAa;IACbC,eAAe;IACfC,YAAY;IACZC;EACJ,CAAC,GAAAL,IAAA;EACG;EACA;;EAEA,IAAI,CAACM,KAAK,CAACC,OAAO,CAACN,KAAK,CAAC,EAAE;IACvB,oBACIH,OAAA;MAAIU,SAAS,EAAC,YAAY;MAAAC,QAAA,GAAC,IAEvB,EAACC,MAAM,CAACC,IAAI,CAACV,KAAK,CAAC,CAACW,GAAG,CAAEC,IAAI,iBACzBf,OAAA;QAEIU,SAAS,EACL,iBAAiB,IAChBP,KAAK,CAACY,IAAI,CAAC,KAAKR,YAAY,GAAG,SAAS,GAAG,EAAE,CACjD;QACDS,OAAO,EAAEA,CAAA,KAAMV,YAAY,CAACH,KAAK,CAACY,IAAI,CAAC,CAAE;QACzCE,IAAI,EAAC,QAAQ;QAAAN,QAAA,EAEZR,KAAK,CAACY,IAAI,CAAC,CAACV,eAAe;MAAC,GARxBF,KAAK,CAACY,IAAI,CAAC,CAACX,aAAa,CAAC;QAAAc,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAUtC,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACD;EAEb;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;AACJ,CAAC;AAACC,EAAA,GA9DIrB,SAAS;AAgEfA,SAAS,CAACsB,YAAY,GAAG;EACrBnB,aAAa,EAAE,KAAK;EACpBC,eAAe,EAAE;AACrB,CAAC;AAEDJ,SAAS,CAACuB,SAAS,GAAG;EAClBrB,KAAK,EAAEL,SAAS,CAAC2B,SAAS,CAAC,CAAC3B,SAAS,CAAC4B,MAAM,EAAE5B,SAAS,CAAC6B,KAAK,CAAC,CAAC;EAC/DvB,aAAa,EAAEN,SAAS,CAAC8B,MAAM,CAACC,UAAU;EAC1CxB,eAAe,EAAEP,SAAS,CAAC8B,MAAM,CAACC,UAAU;EAC5CvB,YAAY,EAAER,SAAS,CAACgC,IAAI;EAC5BvB,YAAY,EAAET,SAAS,CAAC4B;AAC5B,CAAC;AAED,eAAezB,SAAS;AAAC,IAAAqB,EAAA;AAAAS,YAAA,CAAAT,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}