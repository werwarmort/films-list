{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Nikita\\\\film-list\\\\src\\\\components\\\\tableHeader.jsx\";\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TableHeader = _ref => {\n  let {\n    onSort,\n    selectedSort,\n    columns\n  } = _ref;\n  const handleSort = item => {\n    if (selectedSort.iter === item) {\n      onSort({\n        ...selectedSort,\n        order: selectedSort.order === \"asc\" ? \"desc\" : \"asc\"\n      });\n    } else {\n      onSort({\n        iter: item,\n        order: \"asc\"\n      });\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"thead\", {\n    children: /*#__PURE__*/_jsxDEV(\"tr\", {\n      children: Object.keys(columns).map(column => /*#__PURE__*/_jsxDEV(\"th\", {\n        onClick: columns[column].iter ? () => handleSort(columns[column].iter) : undefined,\n        role: columns[column].iter && \"button\",\n        scope: \"col\",\n        className: \"unselectable\",\n        children: columns[column].name\n      }, column, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 9\n  }, this);\n};\n_c = TableHeader;\nTableHeader.propTypes = {\n  onSort: PropTypes.func.isRequired,\n  selectedSort: PropTypes.object.isRequired,\n  columns: PropTypes.object.isRequired\n};\nexport default TableHeader;\nvar _c;\n$RefreshReg$(_c, \"TableHeader\");","map":{"version":3,"names":["React","PropTypes","jsxDEV","_jsxDEV","TableHeader","_ref","onSort","selectedSort","columns","handleSort","item","iter","order","children","Object","keys","map","column","onClick","undefined","role","scope","className","name","fileName","_jsxFileName","lineNumber","columnNumber","_c","propTypes","func","isRequired","object","$RefreshReg$"],"sources":["C:/Users/Nikita/film-list/src/components/tableHeader.jsx"],"sourcesContent":["import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst TableHeader = ({ onSort, selectedSort, columns }) => {\r\n    const handleSort = (item) => {\r\n        if (selectedSort.iter === item) {\r\n            onSort({\r\n                ...selectedSort,\r\n                order: selectedSort.order === \"asc\" ? \"desc\" : \"asc\"\r\n            });\r\n        } else {\r\n            onSort({ iter: item, order: \"asc\" });\r\n        }\r\n    };\r\n\r\n    return (\r\n        <thead>\r\n            <tr>\r\n                {Object.keys(columns).map((column) => (\r\n                    <th\r\n                        key={column}\r\n                        onClick={\r\n                            columns[column].iter\r\n                                ? () => handleSort(columns[column].iter)\r\n                                : undefined\r\n                        }\r\n                        {...{ role: columns[column].iter && \"button\" }}\r\n                        scope=\"col\"\r\n                        className=\"unselectable\"\r\n                    >\r\n                        {columns[column].name}\r\n                    </th>\r\n                ))}\r\n\r\n                {/* <th scope=\"col\">Качества</th>\r\n                <th onClick={() => handleSort(\"genereOfFilm.name\")} scope=\"col\">\r\n                    Жанр\r\n                </th>\r\n                <th onClick={() => handleSort(\"viewed\")} scope=\"col\">\r\n                    просмотрел\r\n                </th>\r\n                <th\r\n                    onClick={() => handleSort(\"rate\")}\r\n                    className=\"text-center\"\r\n                    scope=\"col\"\r\n                >\r\n                    оценка\r\n                </th>\r\n                <th onClick={() => handleSort(\"bookmark\")} scope=\"col\">\r\n                    закладки\r\n                </th> */}\r\n            </tr>\r\n        </thead>\r\n    );\r\n};\r\n\r\nTableHeader.propTypes = {\r\n    onSort: PropTypes.func.isRequired,\r\n    selectedSort: PropTypes.object.isRequired,\r\n    columns: PropTypes.object.isRequired\r\n};\r\n\r\nexport default TableHeader;\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,SAAS,MAAM,YAAY;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnC,MAAMC,WAAW,GAAGC,IAAA,IAAuC;EAAA,IAAtC;IAAEC,MAAM;IAAEC,YAAY;IAAEC;EAAQ,CAAC,GAAAH,IAAA;EAClD,MAAMI,UAAU,GAAIC,IAAI,IAAK;IACzB,IAAIH,YAAY,CAACI,IAAI,KAAKD,IAAI,EAAE;MAC5BJ,MAAM,CAAC;QACH,GAAGC,YAAY;QACfK,KAAK,EAAEL,YAAY,CAACK,KAAK,KAAK,KAAK,GAAG,MAAM,GAAG;MACnD,CAAC,CAAC;IACN,CAAC,MAAM;MACHN,MAAM,CAAC;QAAEK,IAAI,EAAED,IAAI;QAAEE,KAAK,EAAE;MAAM,CAAC,CAAC;IACxC;EACJ,CAAC;EAED,oBACIT,OAAA;IAAAU,QAAA,eACIV,OAAA;MAAAU,QAAA,EACKC,MAAM,CAACC,IAAI,CAACP,OAAO,CAAC,CAACQ,GAAG,CAAEC,MAAM,iBAC7Bd,OAAA;QAEIe,OAAO,EACHV,OAAO,CAACS,MAAM,CAAC,CAACN,IAAI,GACd,MAAMF,UAAU,CAACD,OAAO,CAACS,MAAM,CAAC,CAACN,IAAI,CAAC,GACtCQ,SACT;QACKC,IAAI,EAAEZ,OAAO,CAACS,MAAM,CAAC,CAACN,IAAI,IAAI,QAAQ;QAC5CU,KAAK,EAAC,KAAK;QACXC,SAAS,EAAC,cAAc;QAAAT,QAAA,EAEvBL,OAAO,CAACS,MAAM,CAAC,CAACM;MAAI,GAVhBN,MAAM;QAAAO,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAYlB;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAmBD;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACD;AAEhB,CAAC;AAACC,EAAA,GAnDIxB,WAAW;AAqDjBA,WAAW,CAACyB,SAAS,GAAG;EACpBvB,MAAM,EAAEL,SAAS,CAAC6B,IAAI,CAACC,UAAU;EACjCxB,YAAY,EAAEN,SAAS,CAAC+B,MAAM,CAACD,UAAU;EACzCvB,OAAO,EAAEP,SAAS,CAAC+B,MAAM,CAACD;AAC9B,CAAC;AAED,eAAe3B,WAAW;AAAC,IAAAwB,EAAA;AAAAK,YAAA,CAAAL,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}