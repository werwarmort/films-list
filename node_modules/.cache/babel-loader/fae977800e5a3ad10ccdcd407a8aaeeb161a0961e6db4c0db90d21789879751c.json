{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Nikita\\\\film-list\\\\src\\\\components\\\\tableHeader.jsx\";\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TableHeader = _ref => {\n  let {\n    onSort,\n    selectedSort,\n    columns\n  } = _ref;\n  const handleSort = item => {\n    if (selectedSort.path === item) {\n      onSort({\n        ...selectedSort,\n        order: selectedSort.order === \"asc\" ? \"desc\" : \"asc\"\n      });\n    } else {\n      onSort({\n        path: item,\n        order: \"asc\"\n      });\n    }\n  };\n\n  // const setArrow = (col) => {\n  //     Object.keys(columns).map((column) => {\n  //         if (\n  //             columns[column].name === col &&\n  //             columns[column].name !== \"Kачества\" &&\n  //             columns[column].name !== undefined\n  //         ) {\n  //             console.log(columns[column].name);\n  //             return <i className=\"bi bi-caret-down-fill\"></i>;\n  //         }\n  //     });\n  // };\n\n  const setArrow = (genre, directionOfFilter) => {\n    const filled = \"bi bi-caret-up-fill\";\n    const unfilled = Object.keys(columns).map(column => {\n      return columns[column].genre === genre ? \"bi bi-caret-up-fill\" : \"\";\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"thead\", {\n    children: /*#__PURE__*/_jsxDEV(\"tr\", {\n      children: Object.keys(columns).map(column => /*#__PURE__*/_jsxDEV(\"th\", {\n        onClick: columns[column].path ? () => handleSort(columns[column].path) : undefined,\n        onKeyDown: setArrow(columns[column].genre),\n        role: columns[column].path && \"button\",\n        scope: \"col\",\n        className: \"unselectable\",\n        children: [columns[column].name, /*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 25\n        }, this)]\n      }, column, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 9\n  }, this);\n};\n_c = TableHeader;\nTableHeader.propTypes = {\n  onSort: PropTypes.func.isRequired,\n  selectedSort: PropTypes.object.isRequired,\n  columns: PropTypes.object.isRequired\n};\nexport default TableHeader;\nvar _c;\n$RefreshReg$(_c, \"TableHeader\");","map":{"version":3,"names":["React","PropTypes","jsxDEV","_jsxDEV","TableHeader","_ref","onSort","selectedSort","columns","handleSort","item","path","order","setArrow","genre","directionOfFilter","filled","unfilled","Object","keys","map","column","children","onClick","undefined","onKeyDown","role","scope","className","name","fileName","_jsxFileName","lineNumber","columnNumber","_c","propTypes","func","isRequired","object","$RefreshReg$"],"sources":["C:/Users/Nikita/film-list/src/components/tableHeader.jsx"],"sourcesContent":["import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst TableHeader = ({ onSort, selectedSort, columns }) => {\r\n    const handleSort = (item) => {\r\n        if (selectedSort.path === item) {\r\n            onSort({\r\n                ...selectedSort,\r\n                order: selectedSort.order === \"asc\" ? \"desc\" : \"asc\"\r\n            });\r\n        } else {\r\n            onSort({ path: item, order: \"asc\" });\r\n        }\r\n    };\r\n\r\n    // const setArrow = (col) => {\r\n    //     Object.keys(columns).map((column) => {\r\n    //         if (\r\n    //             columns[column].name === col &&\r\n    //             columns[column].name !== \"Kачества\" &&\r\n    //             columns[column].name !== undefined\r\n    //         ) {\r\n    //             console.log(columns[column].name);\r\n    //             return <i className=\"bi bi-caret-down-fill\"></i>;\r\n    //         }\r\n    //     });\r\n    // };\r\n\r\n    const setArrow = (genre, directionOfFilter) => {\r\n        const filled = \"bi bi-caret-up-fill\";\r\n        const unfilled = Object.keys(columns).map((column) => {\r\n            return columns[column].genre === genre ? \"bi bi-caret-up-fill\" : \"\";\r\n        });\r\n    };\r\n\r\n    return (\r\n        <thead>\r\n            <tr>\r\n                {Object.keys(columns).map((column) => (\r\n                    <th\r\n                        key={column}\r\n                        onClick={\r\n                            columns[column].path\r\n                                ? () => handleSort(columns[column].path)\r\n                                : undefined\r\n                        }\r\n                        onKeyDown={setArrow(columns[column].genre)}\r\n                        {...{ role: columns[column].path && \"button\" }}\r\n                        scope=\"col\"\r\n                        className=\"unselectable\"\r\n                    >\r\n                        {columns[column].name}\r\n                        <i className={\"\"}></i>\r\n                    </th>\r\n                ))}\r\n            </tr>\r\n        </thead>\r\n    );\r\n};\r\n\r\nTableHeader.propTypes = {\r\n    onSort: PropTypes.func.isRequired,\r\n    selectedSort: PropTypes.object.isRequired,\r\n    columns: PropTypes.object.isRequired\r\n};\r\n\r\nexport default TableHeader;\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,SAAS,MAAM,YAAY;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnC,MAAMC,WAAW,GAAGC,IAAA,IAAuC;EAAA,IAAtC;IAAEC,MAAM;IAAEC,YAAY;IAAEC;EAAQ,CAAC,GAAAH,IAAA;EAClD,MAAMI,UAAU,GAAIC,IAAI,IAAK;IACzB,IAAIH,YAAY,CAACI,IAAI,KAAKD,IAAI,EAAE;MAC5BJ,MAAM,CAAC;QACH,GAAGC,YAAY;QACfK,KAAK,EAAEL,YAAY,CAACK,KAAK,KAAK,KAAK,GAAG,MAAM,GAAG;MACnD,CAAC,CAAC;IACN,CAAC,MAAM;MACHN,MAAM,CAAC;QAAEK,IAAI,EAAED,IAAI;QAAEE,KAAK,EAAE;MAAM,CAAC,CAAC;IACxC;EACJ,CAAC;;EAED;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA,MAAMC,QAAQ,GAAGA,CAACC,KAAK,EAAEC,iBAAiB,KAAK;IAC3C,MAAMC,MAAM,GAAG,qBAAqB;IACpC,MAAMC,QAAQ,GAAGC,MAAM,CAACC,IAAI,CAACX,OAAO,CAAC,CAACY,GAAG,CAAEC,MAAM,IAAK;MAClD,OAAOb,OAAO,CAACa,MAAM,CAAC,CAACP,KAAK,KAAKA,KAAK,GAAG,qBAAqB,GAAG,EAAE;IACvE,CAAC,CAAC;EACN,CAAC;EAED,oBACIX,OAAA;IAAAmB,QAAA,eACInB,OAAA;MAAAmB,QAAA,EACKJ,MAAM,CAACC,IAAI,CAACX,OAAO,CAAC,CAACY,GAAG,CAAEC,MAAM,iBAC7BlB,OAAA;QAEIoB,OAAO,EACHf,OAAO,CAACa,MAAM,CAAC,CAACV,IAAI,GACd,MAAMF,UAAU,CAACD,OAAO,CAACa,MAAM,CAAC,CAACV,IAAI,CAAC,GACtCa,SACT;QACDC,SAAS,EAAEZ,QAAQ,CAACL,OAAO,CAACa,MAAM,CAAC,CAACP,KAAK,CAAE;QACrCY,IAAI,EAAElB,OAAO,CAACa,MAAM,CAAC,CAACV,IAAI,IAAI,QAAQ;QAC5CgB,KAAK,EAAC,KAAK;QACXC,SAAS,EAAC,cAAc;QAAAN,QAAA,GAEvBd,OAAO,CAACa,MAAM,CAAC,CAACQ,IAAI,eACrB1B,OAAA;UAAGyB,SAAS,EAAE;QAAG;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAK;MAAA,GAZjBZ,MAAM;QAAAS,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAclB;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EACD;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACD;AAEhB,CAAC;AAACC,EAAA,GAvDI9B,WAAW;AAyDjBA,WAAW,CAAC+B,SAAS,GAAG;EACpB7B,MAAM,EAAEL,SAAS,CAACmC,IAAI,CAACC,UAAU;EACjC9B,YAAY,EAAEN,SAAS,CAACqC,MAAM,CAACD,UAAU;EACzC7B,OAAO,EAAEP,SAAS,CAACqC,MAAM,CAACD;AAC9B,CAAC;AAED,eAAejC,WAAW;AAAC,IAAA8B,EAAA;AAAAK,YAAA,CAAAL,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}